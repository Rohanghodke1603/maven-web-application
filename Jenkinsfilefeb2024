def sendslacknotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}


node{

buildName 'Dev - ${BUILD_NUMBER}'
buildName 'pipeline script - scriptedway'
def mavenHome = tool name: "maven3.9.5" 

echo "The Node name is: ${env.NODE_NAME} "

echo "The job name is : ${env.JOB_NAME} "

echo "The build number is: ${env.BUILD_NUMBER} "

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: '']])
properties([[$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])

try{
//Checkout Stage
stage('CheckoutCode'){
  git branch: 'development', credentialsId: 'af39f694-8105-4ebd-9d60-db90181a2e58', url: 
'https://github.com/Rohanghodke1603/maven-web-application.git'
}

//Build Stage
stage('Build'){
sh "$mavenHome/bin/mvn clean package"
}
/*
//Generate SonarQube Report
stage('SonarQube Report'){
sh "$mavenHome/bin/mvn sonar:sonar"
}

//Upload Artifact into Artifactory repo
stage('UploadArtifactsIntoNexus'){
sh "$mavenHome/bin/mvn deploy"
}


//Deploy App into Tomcat Server
stage('DeployAppIntoTomcat'){
sshagent(['9d037e09-54aa-4870-b3fb-27d6f28f67aa']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@15.206.27.252:/opt/apache-tomcat-9.0.86/webapps"
}
}
*/
}
catch(e){
currentBuild.result = "Failed"
}
finally{
sendslacknotifications(currentBuild.result)

}
}//Node Closing
